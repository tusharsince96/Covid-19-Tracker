{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.jsx","api/index.js","components/chart/chart.jsx","components/countryPicker/countryPicker.jsx","ComponentNew/Navbar/MenuItems.js","ComponentNew/Navbar/Navbar.js","ComponentNew/Footer/Footer.js","images/image.png","app.js","index.js","app.module.css","components/chart/chart.module.css","components/countryPicker/countryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","Component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","MenuItems","cName","Navbar","state","clicked","handleClick","setState","class","onClick","this","index","href","Footer","getFullYear","App","fetchedData","fetcheddata","Styles","Container","image","src","CoronaImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.215596fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__1MtsP\",\"card\":\"cards_card__2rHqd\",\"infected\":\"cards_infected__3lFTV\",\"recovered\":\"cards_recovered__2p0q2\",\"deaths\":\"cards_deaths__1jHCE\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './cards.module.css';\r\n\r\nconst  Cards = ({ data: {confirmed,recovered,deaths,lastUpdate} }) => { \r\n    \r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div  className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\"> \r\n        \r\n        <Grid item Component={Card}  xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n        \r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp  \r\n        start={0}\r\n        end={confirmed.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item Component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n        \r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp  \r\n        start={0}\r\n        end={recovered.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of recovered cases from Covid-19</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item Component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n        \r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\r\n        <Typography variant=\"h5\">\r\n        <CountUp  \r\n        start={0}\r\n        end={deaths.value}\r\n        duration={2.5}\r\n        separator=\",\"\r\n\r\n        />\r\n        </Typography>\r\n        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\r\n        <Typography variant=\"body2\">Number of Deaths caused by Covid-19</Typography>\r\n        </CardContent>\r\n        </Grid>\r\n        </Grid>\r\n        \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Cards;\r\n"," import axios from 'axios';\r\n\r\n const url =  'https://covid19.mathdro.id/api';\r\n\r\n  export const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country)\r\n    {\r\n         changeableUrl=`${url}/countries/${country}`\r\n\r\n    }\r\n     try {\r\n         const { data:{confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n/*\r\n          const modifiedData = {\r\n            confirmed:  data.confirmed,\r\n            recovered:  data.recovered,\r\n            deaths:     data.deaths,\r\n            lastUpdate: data.lastUpdate,\r\n          }\r\n*/\r\n          return {confirmed, recovered, deaths, lastUpdate};\r\n     } catch (error) {\r\n         console.log(error);\r\n     }\r\n\r\n\r\n }\r\n\r\n export const fetchDailyData = async()=> {\r\n   try {\r\n     const { data } = await axios.get(`${url}/daily`);\r\n\r\n     const modifiedData= data.map((dailyData) => ({\r\n\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n\r\n     }));\r\n     return modifiedData;\r\n   } catch (error) {\r\n     console.log(error);\r\n   }\r\n }\r\n\r\n export const fetchCountries = async()=>{\r\n   try {\r\n     const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n     return countries.map((country) => country.name);\r\n   } catch (error) {\r\n     console.log(error);\r\n   }\r\n }","import React, {useState,useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar }from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './chart.module.css';\r\nconst  Chart = ({ data: {confirmed,deaths,recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n            //console.log(dailyData);\r\n\r\n        }\r\n\r\n       \r\n        \r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n      <Line\r\n       data={{\r\n        labels: dailyData.map(({date}) => date),\r\n        datasets: [{\r\n            data: dailyData.map(({confirmed})=>confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n\r\n        }, {\r\n            \r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n\r\n            }],\r\n    }}\r\n    \r\n    />) : null\r\n\r\n    );\r\n\r\n    console.log(confirmed, recovered, deaths)\r\n    const barChart = (\r\n\r\n        confirmed\r\n        ? (\r\n           <Bar\r\n           data={{\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label: 'people',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n           }}\r\n           options={{\r\n              legend: {display: false},\r\n              title: {display: true, text: `Current state in ${country}`},\r\n\r\n           }}\r\n           />   \r\n        ) : null\r\n\r\n    )\r\n    return (\r\n      <div className = {styles.container}>\r\n      {country ? barChart:lineChart }\r\n      \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './countryPicker.module.css';\r\n\r\nimport{ fetchCountries } from '../../api';\r\n\r\nconst  CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n \r\n            setFetchedCountries(await fetchCountries());\r\n\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    \r\n\r\n    return (\r\n       <FormControl className ={styles.formControl}>\r\n       <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value) }>\r\n       <option value=\"\">Global</option>\r\n       {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n       </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export const MenuItems = [\r\n\r\n    {\r\n        title:\"Home\",\r\n        url:\"#\",\r\n        cName:\"nav-Links\" \r\n    },\r\n    {\r\n        title:\"Prevention\",\r\n        url:\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public/when-and-how-to-use-masks\",\r\n        cName:\"nav-Links\" \r\n    },\r\n    {\r\n        title:\"Vaccination\",\r\n        url:\"https://www.cowin.gov.in/\",\r\n        cName:\"nav-Links\" \r\n    },\r\n    {\r\n        title:\"Support\",\r\n        url:\"https://turn2me.ie/\",\r\n        cName:\"nav-Links\" \r\n    },\r\n    {\r\n        title:\"Research\",\r\n        url:\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/global-research-on-novel-coronavirus-2019-ncov\",\r\n        cName:\"nav-Links\" \r\n    },\r\n]","import React, { Component } from 'react';\r\nimport { Button } from '../Button';\r\nimport {MenuItems} from './MenuItems'\r\nimport './Navbar.css'\r\nclass Navbar extends Component{\r\n    state ={ clicked: false}\r\n\r\n    handleClick=()=>{\r\n        this.setState({clicked: !this.state.clicked})\r\n    }\r\n\r\n\r\n     render(){\r\n         return(\r\n             <nav className=\"NavbarItems\">\r\n             <h1 className=\"navbar-logo\"><i class=\" fas fa-shield-virus\"> Covid-19 Tracker</i></h1>\r\n             <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                 <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n             \r\n              </div>\r\n              <ul className={this.state.clicked? 'nav-menu active': 'nav-menu'}>\r\n              {MenuItems.map((item, index ) =>{\r\n                  return (\r\n                <li key={index}>\r\n                    <a className={item.cName} href={item.url}>\r\n                    {item.title}\r\n                    \r\n                    </a>\r\n                </li>\r\n                  )\r\n\r\n              })}\r\n              \r\n              </ul>\r\n              \r\n             </nav>\r\n         )\r\n     }\r\n}\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport { Button } from '../Button';\r\nimport './Footer.css'\r\nclass Footer extends Component{\r\n   \r\n\r\n\r\n     render(){\r\n         return(\r\n             \r\n            <nav className=\"FooterItems\">\r\n\r\n             \r\n              <div className=\"row\">\r\n              <p className=\"col-sm\">\r\n              &copy;{new Date().getFullYear()} | tusharsince96@outlook.com | School Of Computer And System Sciences | Jawaharlal Nehru University\r\n              </p>\r\n              </div>\r\n             </nav>\r\n              \r\n             \r\n            \r\n         )\r\n     }\r\n}\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, {Component} from 'react';\r\nimport Cards from './components/cards/cards.jsx';\r\nimport Styles from './app.module.css';\r\nimport Chart from './components/chart/chart';\r\nimport CountryPicker from './components/countryPicker/countryPicker';\r\nimport Navbar from './ComponentNew/Navbar/Navbar';\r\nimport Footer from './ComponentNew/Footer/Footer'\r\nimport CoronaImage from './images/image.png';\r\nimport { fetchData } from './api';\r\n\r\n\r\nclass App extends Component {\r\n\r\nstate = {\r\n    data: {},\r\n    country:'',\r\n}\r\n\r\n   async componentDidMount(){\r\n       const fetcheddata = await fetchData();\r\n \r\n      this.setState({ data: fetcheddata });\r\n   };\r\nhandleCountryChange = async (country) =>{\r\n   \r\n    const fetchedData = await fetchData(country);\r\n    \r\n    this.setState({ data: fetchedData, country:country });\r\n    \r\n    \r\n\r\n}\r\n    render(){\r\n\r\n        const { data,country } = this.state;\r\n       \r\n         \r\n        return(\r\n            <div>\r\n            <Navbar/>\r\n            <div className={Styles.Container}>\r\n            \r\n            <img className={Styles.image}src={CoronaImage} alt=\"COVID-19\"/>\r\n            <Cards data={data} />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Chart  data={data} country={country}/>\r\n            \r\n\r\n            <Footer/>\r\n            \r\n            </div> \r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render( <App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"app_Container__3NXxX\",\"image\":\"app_image__1zpuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__2QNiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countryPicker_formControl__2DVDS\"};"],"sourceRoot":""}